const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

function buildDocs() {
  try {
    const typescriptDir = path.join(process.cwd(), "./build/client/typescript");
    const clientDocsDir = path.join(typescriptDir, "docs");
    const vitepressDir = path.join(clientDocsDir, ".vitepress");

    const typedocConfigSourcePath = path.join(process.cwd(), "config", "typedoc.config.mjs");
    const typedocConfigTargetPath = path.join(typescriptDir, "typedoc.config.mjs");

    const vitepressConfigSourcePath = path.join(process.cwd(), "./config/vitepress.config.mts");
    const vitepressConfigTargetPath = path.join(vitepressDir, "./config.mts");

    fs.copyFileSync(typedocConfigSourcePath, typedocConfigTargetPath);
    console.log(`typedoc.config.mjs copied to ${typedocConfigTargetPath}.`);

    console.log("Running npx typedoc...");
    execSync("npx typedoc", { cwd: typescriptDir, stdio: "inherit" });
    console.log("TypeDoc generation complete.");

    // this needs to be build after docs has been generated by typedoc otherwise
    // typedoc deletes the existing directory and the copy operation fails
    fs.mkdirSync(vitepressDir, { recursive: true });

    fs.copyFileSync(vitepressConfigSourcePath, vitepressConfigTargetPath);
    console.log(`vitepress.config.mjs copied to ${vitepressConfigTargetPath}.`);

    console.log("Running vitepress build...");
    execSync("npx vitepress build", { cwd: clientDocsDir, stdio: "inherit" });
    console.log("VitePress build complete.");
  } catch (error) {
    console.error("[Error during client docs building process]:\n\n", error);
    process.exit(1);
  }
}

buildDocs();
